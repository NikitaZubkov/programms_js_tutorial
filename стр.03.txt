/**
    ====== Первая программа ======

    Итак, мы кратко разобрались с тем, что такое js, где и как он исполняется.
    Сделаем свою первую программу по выводу произвольной информации на странице через подключенный скрипт и в так называемой консоли браузера. 
    Каждый браузер имеет режим разработчика, в котором мы можем просмотреть:
    - структуру html документа, стили отдельных элементов
    - загруженные файлы, запросы со страницы
    - консоль браузера, в которой можно увидеть ошибки в ходе исполнения скриптов, предупреждения и логи, 
    которые выводятся, если их вывод прописан в коде
    Подробнее про dev tools на примере "google chrome https://developers.google.com/web/tools/chrome-devtools".

    Для работы с консолью достаточно ввести нужный нам код и исполнить его. 
    Для подключения же файла нужно сделать следующее: 
    - Создать директорию в любом удобном месте
    - Создать в ней два файла: test.html и test.js
    - Внести в них код ниже

    Содержание файла html:

    ```
    <!--
        Многострочный комментарий в html
        Комментарии в любом языке не влияют на его работу и нужны для информирования разработчика
        о тех или иных деталях кода
        В данном случае мы используем закрывающийся тег <script> и в его атрибуте src указываем путь до нашего файла test.js
        После того как браузер получит html он увидит, что нужно скачать файл и исполнить его
    -->
    <script src="./test.js"></script>
    ```

    Содержание файла js:

    ```
        // Однострочный комментарий в js

        // Выводим в консоль число 123. Более подробное объяснение что такое console и что такое .log будет в главе "функции"
        console.log(123);

        // Выводим окно с числом 123 на странице
        alert(123);
    ```

    Важное замечание: символ ; - это символ окончания код на текущей строке. 
    В других языках этот символ может быть обязательным и его пропуск будет означать ошибку. В js это не будет считаться ошибкой, 
    однако в некоторых случаях исполнения кода браузер может посчитать, что строка с кодом не завершилась и начать читать следующую. 
    И тут уже будет ошибка. Поэтому рекомендуется всегда ставить знак ; чтобы избежать вероятных ошибок.

    После открытия html мы увидим на странице окно с 123 и увидим лог в консоли с таким же содержанием.

    Говоря немного вперёд, alert это доступная по умолчанию функция, которую можно вызвать в любой части кода.
    console - это тоже доступная по умолчанию базовая конструкция, однако это не функция, а так называемый объект: структура для хранения данных (любого формата)
    А console.log() - это также вызов доступной по умолчанию функции. Однако здесь есть некоторое отличие от просто функции (например от alert), которое будет рассматриваться
    позднее.

    alert относится к некоторым базовым функциям, которые нужны для взаимодействия с пользователем. Это самый базовый и простой способ взаимодействовать 
    с пользователем. Кроме alert также можно использовать:
    - promt: вывод окна с возможностью указать значение, с которым можно дальше работать и использовать его
    - confirm: вывод окна с выбором двух вариантов ответа: "Ок" и "Отмена"

    ```
    // Передаём в функцию текст и необязательное значение по умолчанию
    prompt('Сколько тебе лет?', 100);

    confirm("Ты здесь главный?");
    ```

    Более подробно про "alert, promt, confirm 
        https://developer.mozilla.org/ru/docs/Web/API/Window/alert
        https://developer.mozilla.org/ru/docs/Web/API/Window/prompt
        https://developer.mozilla.org/ru/docs/Web/API/Window/confirm
        https://learn.javascript.ru/alert-prompt-confirm
        "
*/